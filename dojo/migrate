#!/bin/bash
set -e

if [ $# -ge 1 ]; then
    export PROFILE=$1
else
    export PROFILE="dev"
fi

#-----------------
# env setup
#
export MANIFEST_FILE_PATH="./manifests/$PROFILE/manifest.json"
export BINDINGS_PATH="./bindings/typescript"
export CLIENT_PATH="../client/src/generated"
export CLIENT_MANIFEST_PATH="../client/src/generated/$PROFILE"
export WORLD_ADDRESS=$(toml get Scarb.toml --raw tool.dojo.env.world_address)
export RPC_URL=$(toml get Scarb.toml --raw profile.$PROFILE.tool.dojo.env.rpc_url)

if [[
  -z "$PROFILE" ||
  -z "$MANIFEST_FILE_PATH" ||
  "$WORLD_ADDRESS" != "0x"* ||
  "$RPC_URL" != "http"*
]]; then
  echo "! Missing data üëé"
  exit 1
fi

#-----------------
# migrate
#
echo "------------------------------------------------------------------------------"
echo "Migrating..."
echo ""
echo "PROFILE: $PROFILE"
# sozo --profile $PROFILE migrate plan --world $WORLD_ADDRESS
# exit 0
sozo -P $PROFILE migrate apply --world $WORLD_ADDRESS

#-----------------
# auth write
#
scripts/default_auth.sh $PROFILE


#------------------------
# copy manifest to client
#
mkdir -p $CLIENT_MANIFEST_PATH
cp $MANIFEST_FILE_PATH $CLIENT_MANIFEST_PATH/

#------------------------
# typescript bindings
#
if [[ "$PROFILE" == "dev" ]]; then
  # TODO: Enable this when bindings are working
  # generate and cop bindings
  # sozo build --typescript
  # cp $BINDINGS_PATH/* $CLIENT_PATH/

  # TODO: Remove this when bindings are working
  # copy to client
  cd ../client
  npm run create-components $RPC_URL $WORLD_ADDRESS

  # list copied files
  ls -ld $CLIENT_PATH/* $CLIENT_MANIFEST_PATH/* | grep -E 'ts|json'
fi

#-----------------
echo "--- DONE! üëç"
